{"version":3,"sources":["components/Weather/Weather.module.scss","components/common/SearchInput/SearchInput.jsx","api/openWeatherMapAPI.js","utils/date.js","assets/img/yasnoe-nebo.jpg","assets/img/night.jpg","assets/img/oblachnoe.jpg","assets/img/moon-clouds.jpg","assets/img/rain.jpg","assets/img/dozhd-noch.jpg","utils/background.js","redux/reducers/appReducer.js","redux/selectors/appSelectors.js","components/Weather/Weather.jsx","App.js","redux/store.js","index.js","components/common/SearchInput/SearchInput.module.scss"],"names":["module","exports","SearchInput","props","useState","inputValue","searchValue","setSearchValue","useEffect","className","style","wrapper","input","id","onChange","e","currentTarget","value","onBlur","trim","getData","label","htmlFor","viewBox","fill","d","instance","axios","baseURL","openWeatherMapAPI","getSearchCityCurrentWeatherData","city","get","then","response","data","getUserCityCurrentWeatherData","lat","lon","WEEK_DAIS","MONTHS","getDate","today","Date","year","getFullYear","month","getMonth","day","dayOfTheWeek","getDay","backgroundImages","img","isCloud","isRain","rainDay","cloudDay","night","rainNight","cloudNight","selectImg","description","includes","hour","getHours","find","SET_CITY_WEATHER","CHANGE_BG","INIT_APP","initApp","type","setCityWeatherInfo","cityInfo","weatherInfo","changeBg","image","initialState","weather","date","bgImg","isInit","dispatch","temperature","main","additional","wind","name","sys","catch","error","console","log","AppReducer","state","action","getCity","app","getIsInit","getCityInfo","getWeather","getBgImg","connect","initializeApp","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","backgroundImage","container","content","country","owf","Math","round","temp","humidity","speed","App","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b7c6f96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Weather_wrapper__1tWy-\",\"container\":\"Weather_container__3bEbM\",\"content\":\"Weather_content__1qI-P\",\"owf\":\"Weather_owf__1-Y4n\"};","import React, { useEffect, useState } from 'react';\r\nimport style from './SearchInput.module.scss'\r\n\r\nconst SearchInput = (props) => {\r\n  let [searchValue, setSearchValue] = useState(props.inputValue);\r\n\r\n  useEffect(() => {\r\n    setSearchValue(props.inputValue);\r\n  }, [props.inputValue])\r\n\r\n  const searchData = () => {\r\n    if (!searchValue.trim()) return;\r\n    props.getData(searchValue);\r\n  }\r\n\r\n  const changeSearchValue = (e) => setSearchValue(e.currentTarget.value);\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <input className={style.input} id=\"searchInput\" onChange={changeSearchValue} onBlur={searchData} value={searchValue} />\r\n      <label className={style.label} htmlFor=\"searchInput\">\r\n        <svg viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path></svg>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchInput;\r\n","import * as axios from 'axios';\r\n\r\nlet instance = axios.create({\r\n  baseURL: 'https://api.openweathermap.org/data/2.5/',\r\n});\r\n\r\nconst openWeatherMapAPI = {\r\n  getSearchCityCurrentWeatherData(city) {\r\n    return instance.get(`weather?q=${city}&lang=en&appid=7855be89de72b6ea0540164aea4c0922&units=metric`).then(response => response.data);\r\n  },\r\n  getUserCityCurrentWeatherData(lat, lon) {\r\n    return instance.get(`weather?lat=${lat}&lon=${lon}&lang=en&appid=7855be89de72b6ea0540164aea4c0922&units=metric`).then(response => response.data);\r\n  }\r\n};\r\n\r\nexport default openWeatherMapAPI;\r\n","const WEEK_DAIS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\nconst MONTHS = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\r\n\r\nconst getDate = () => {\r\n  const today = new Date();\r\n  const year = today.getFullYear();\r\n  const month = today.getMonth();\r\n  const day = today.getDate();\r\n  const dayOfTheWeek = today.getDay();\r\n\r\n  return `${WEEK_DAIS[dayOfTheWeek]}, ${day} ${MONTHS[month]} ${year}`;\r\n}\r\n\r\nexport default getDate;\r\n","export default __webpack_public_path__ + \"static/media/yasnoe-nebo.9561ba09.jpg\";","export default __webpack_public_path__ + \"static/media/night.c3407709.jpg\";","export default __webpack_public_path__ + \"static/media/oblachnoe.5bf735ef.jpg\";","export default __webpack_public_path__ + \"static/media/moon-clouds.4903b037.jpg\";","export default __webpack_public_path__ + \"static/media/rain.66d4dcc7.jpg\";","export default __webpack_public_path__ + \"static/media/dozhd-noch.5e919563.jpg\";","import day from '../assets/img/yasnoe-nebo.jpg';\r\nimport night from '../assets/img/night.jpg';\r\nimport cloudDay from '../assets/img/oblachnoe.jpg';\r\nimport cloudNight from '../assets/img/moon-clouds.jpg';\r\nimport rainDay from '../assets/img/rain.jpg';\r\nimport rainNight from '../assets/img/dozhd-noch.jpg';\r\n\r\nconst backgroundImages = {\r\n  day: [\r\n    {\r\n      img: day,\r\n      isCloud: false,\r\n      isRain: false\r\n    },\r\n    {\r\n      img: rainDay,\r\n      isCloud: false,\r\n      isRain: true\r\n    },\r\n    {\r\n      img: rainDay,\r\n      isCloud: true,\r\n      isRain: true\r\n    },\r\n    {\r\n      img: cloudDay,\r\n      isCloud: true,\r\n      isRain: false\r\n    }\r\n  ],\r\n  night: [\r\n    {\r\n      img: night,\r\n      isCloud: false,\r\n      isRain: false\r\n    },\r\n    {\r\n      img: rainNight,\r\n      isCloud: false,\r\n      isRain: true\r\n    },\r\n    {\r\n      img: rainNight,\r\n      isCloud: true,\r\n      isRain: true\r\n    },\r\n    {\r\n      img: cloudNight,\r\n      isCloud: true,\r\n      isRain: false\r\n    }\r\n  ]\r\n};\r\n\r\nexport const selectImg = (description) => {\r\n const isCloud = description.includes('cloud');\r\n const isRain = description.includes('rain');\r\n const time = new Date();\r\n const hour = time.getHours();\r\n const partOfDay = (hour > 18 || hour < 6) ? 'night' : 'day';\r\n\r\n return backgroundImages[partOfDay].find(img => (img.isCloud === isCloud && img.isRain === isRain)).img;\r\n}\r\n\r\nexport default backgroundImages;\r\n","import openWeatherMapAPI from \"../../api/openWeatherMapAPI\";\r\nimport getDate from \"../../utils/date\";\r\nimport {selectImg} from \"../../utils/background\";\r\n\r\nconst SET_CITY_WEATHER = 'SET-CITY';\r\nconst CHANGE_BG = 'CHANGE-BG';\r\nconst INIT_APP = 'INIT-APP';\r\nconst DEFAULT_CITY = 'Minsk';\r\n\r\nconst initApp = () => ({type: INIT_APP});\r\nconst setCityWeatherInfo = (city, cityInfo, weatherInfo) => ({type: SET_CITY_WEATHER, city, cityInfo, weatherInfo});\r\nconst changeBg = (image) => ({type: CHANGE_BG, image});\r\n\r\nconst initialState = {\r\n  city: null,\r\n  cityInfo: null,\r\n  weather: null,\r\n  date: null,\r\n  bgImg: null,\r\n  isInit: false,\r\n}\r\n\r\nconst AppReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INIT_APP:\r\n      return {\r\n        ...state,\r\n        date: getDate(),\r\n        isInit: true\r\n      }\r\n    case SET_CITY_WEATHER:\r\n      return {\r\n        ...state,\r\n        city: action.city,\r\n        cityInfo: action.cityInfo,\r\n        weather: action.weatherInfo\r\n      };\r\n    case CHANGE_BG:\r\n      return {\r\n        ...state,\r\n        bgImg: action.image\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  navigator.geolocation.getCurrentPosition(position => {\r\n    const {latitude, longitude} = position.coords;\r\n    if (!!latitude && !!longitude) {\r\n      return openWeatherMapAPI.getUserCityCurrentWeatherData(latitude, longitude)\r\n        .then(data => {\r\n          const weatherInfo = {\r\n            temperature: data.main,\r\n            additional: data.weather[0],\r\n            wind: data.wind\r\n          };\r\n\r\n          const image = selectImg(data.weather[0].description);\r\n\r\n          dispatch(setCityWeatherInfo(data.name, data.sys, weatherInfo));\r\n          dispatch(changeBg(image));\r\n          dispatch(initApp());\r\n        }).catch(error => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      dispatch(getSearchCityCurrentWeatherData(DEFAULT_CITY));\r\n      dispatch(initApp());\r\n    }\r\n  });\r\n}\r\n\r\nexport const getSearchCityCurrentWeatherData = (city) => (dispatch) => {\r\n  return openWeatherMapAPI.getSearchCityCurrentWeatherData(city)\r\n    .then(data => {\r\n      const weatherInfo = {\r\n        temperature: data.main,\r\n        additional: data.weather[0],\r\n        wind: data.wind\r\n      };\r\n\r\n      const image = selectImg(data.weather[0].description);\r\n\r\n      dispatch(setCityWeatherInfo(data.name, data.sys, weatherInfo));\r\n      dispatch(changeBg(image));\r\n    }).catch(error => {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport default AppReducer;\r\n","export const getCity = (state) => state.app.city;\r\nexport const getIsInit = (state) => state.app.isInit;\r\nexport const getCityInfo = (state) => state.app.cityInfo;\r\nexport const getWeather = (state) => state.app.weather;\r\nexport const getDate = (state) => state.app.date;\r\nexport const getBgImg = (state) => state.app.bgImg;\r\n","import React, {useEffect} from 'react';\r\nimport SearchInput from '../common/SearchInput/SearchInput';\r\nimport {connect} from 'react-redux';\r\nimport {getSearchCityCurrentWeatherData, initializeApp} from \"../../redux/reducers/appReducer\";\r\nimport {getBgImg, getCity, getCityInfo, getDate, getIsInit, getWeather} from \"../../redux/selectors/appSelectors\";\r\nimport style from './Weather.module.scss';\r\n\r\nconst Weather = (props) => {\r\n  useEffect(() => {\r\n      props.initializeApp();\r\n  }, [])\r\n\r\n  return (\r\n    <div className={style.wrapper} style={{backgroundImage: `url(${props.bgImg})`}}>\r\n      {\r\n        props.isInit &&\r\n        <div className={style.container}>\r\n          <div className={style.content}>\r\n            <h1>{props.city}, {props.cityInfo?.country}</h1>\r\n            <h2>{props.date}</h2>\r\n            <i className={`weather-icon owf owf-${props.weather.additional.id} ${style.owf}`}></i>\r\n            <p>{props.weather.additional.description}</p>\r\n            <p>{Math.round(props.weather.temperature.temp)} °C</p>\r\n            <p>Humidity: {props.weather.temperature.humidity} %</p>\r\n            <p>Wind: {props.weather.wind.speed} km/h</p>\r\n          </div>\r\n          <SearchInput inputValue={props.city} getData={props.getSearchCityCurrentWeatherData}/>\r\n        </div>\r\n      }\r\n    </div>);\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  city: getCity(state),\r\n  cityInfo: getCityInfo(state),\r\n  weather: getWeather(state),\r\n  date: getDate(state),\r\n  isInit: getIsInit(state),\r\n  bgImg: getBgImg(state),\r\n})\r\n\r\nexport default connect(mapStateToProps, {initializeApp, getSearchCityCurrentWeatherData})(Weather);\r\n","import React from 'react';\nimport './App.css';\nimport Weather from './components/Weather/Weather';\n\nconst App = () => {\n  return (\n    <Weather/>\n  );\n}\n\nexport default App;\n","import AppReducer from './reducers/appReducer';\r\nimport {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst reducers = combineReducers({\r\n  app: AppReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/owfont/owfont-regular.css';\nimport App from './App';\nimport store from \"./redux/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SearchInput_wrapper__2T2Vs\",\"input\":\"SearchInput_input__1MnhW\",\"label\":\"SearchInput_label__1YCt9\"};"],"sourceRoot":""}