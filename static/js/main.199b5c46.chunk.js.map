{"version":3,"sources":["components/Weather/Weather.module.scss","components/common/SearchInput/SearchInput.jsx","api/openWeatherMapAPI.js","assets/img/yasnoe-nebo.jpg","assets/img/night.jpg","assets/img/oblachnoe.jpg","assets/img/moon-clouds.jpg","assets/img/rain.jpg","assets/img/dozhd-noch.jpg","utils/background.js","utils/date.js","components/Weather/Weather.jsx","App.js","index.js","components/common/SearchInput/SearchInput.module.scss"],"names":["module","exports","SearchInput","props","useState","inputValue","searchValue","setSearchValue","useEffect","searchData","trim","getData","className","style","wrapper","input","id","onChange","e","currentTarget","value","onBlur","label","htmlFor","onClick","viewBox","fill","d","instance","axios","baseURL","openWeatherMapAPI","getSearchCityCurrentWeatherData","city","get","then","response","data","getUserCityCurrentWeatherData","lat","lon","backgroundImages","day","img","isCloud","isRain","rainDay","cloudDay","night","rainNight","cloudNight","WEEK_DAIS","MONTHS","getDate","today","Date","year","getFullYear","month","getMonth","dayOfTheWeek","getDay","Weather","setCity","cityInfo","weather","date","bgImg","weatherInfo","setWeatherInfo","isInit","setIsInit","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getWeatherDataByCoordinate","getWeatherDataByCity","processWeatherData","catch","error","alert","image","description","includes","hour","getHours","find","selectImg","updatedWeatherInfo","sys","temperature","main","additional","wind","name","backgroundImage","container","content","country","owf","Math","round","temp","humidity","speed","cityValue","App","ReactDOM","render","document","getElementById"],"mappings":"oKACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,QAAU,yBAAyB,IAAM,uB,qHC0BtHC,EAxBK,SAACC,GACnB,MAAoCC,mBAASD,EAAME,YAAnD,mBAAKC,EAAL,KAAkBC,EAAlB,KAEAC,qBAAU,WACRD,EAAeJ,EAAME,cACpB,CAACF,EAAME,aAEV,IAAMI,EAAa,WACZH,EAAYI,QACjBP,EAAMQ,QAAQL,IAKhB,OACE,sBAAKM,UAAWC,IAAMC,QAAtB,UACE,uBAAOF,UAAWC,IAAME,MAAOC,GAAG,cAAcC,SAJ1B,SAACC,GAAD,OAAOX,EAAeW,EAAEC,cAAcC,QAIiBC,OAAQZ,EAAYW,MAAOd,IACxG,uBAAOM,UAAWC,IAAMS,MAAOC,QAAQ,cAAcC,QAASf,EAA9D,SACE,qBAAKgB,QAAQ,cAAb,SAA2B,sBAAMC,KAAK,eAAeC,EAAE,sW,gBCnB3DC,E,MAAWC,OAAa,CAC1BC,QAAS,6CAYIC,EATW,CACxBC,gCADwB,SACQC,GAC9B,OAAOL,EAASM,IAAT,oBAA0BD,EAA1B,iEAA8FE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAEjIC,8BAJwB,SAIMC,EAAKC,GACjC,OAAOZ,EAASM,IAAT,sBAA4BK,EAA5B,gBAAuCC,EAAvC,iEAA0GL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCXhI,MAA0B,wCCA1B,MAA0B,kCCA1B,MAA0B,sCCA1B,MAA0B,wCCA1B,MAA0B,iCCA1B,MAA0B,uCCOnCI,EAAmB,CACvBC,IAAK,CACH,CACEC,IAAKD,EACLE,SAAS,EACTC,QAAQ,GAEV,CACEF,IAAKG,EACLF,SAAS,EACTC,QAAQ,GAEV,CACEF,IAAKG,EACLF,SAAS,EACTC,QAAQ,GAEV,CACEF,IAAKI,EACLH,SAAS,EACTC,QAAQ,IAGZG,MAAO,CACL,CACEL,IAAKK,EACLJ,SAAS,EACTC,QAAQ,GAEV,CACEF,IAAKM,EACLL,SAAS,EACTC,QAAQ,GAEV,CACEF,IAAKM,EACLL,SAAS,EACTC,QAAQ,GAEV,CACEF,IAAKO,EACLN,SAAS,EACTC,QAAQ,KCjDRM,EAAY,CAAC,SAAU,UAAW,YAAa,WAAY,SAAU,WAAY,UACjFC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAY/GC,EAVC,WACd,IAAMC,EAAQ,IAAIC,KACZC,EAAOF,EAAMG,cACbC,EAAQJ,EAAMK,WACdjB,EAAMY,EAAMD,UACZO,EAAeN,EAAMO,SAE3B,MAAM,GAAN,OAAUV,EAAUS,GAApB,aAAsClB,EAAtC,YAA6CU,EAAOM,GAApD,YAA8DF,ICoFjDM,EAvFC,SAAC3D,GAAW,IAAD,EACzB,EAAsBC,mBAAS,SAA/B,mBAAK6B,EAAL,KAAW8B,EAAX,KACA,EAAoC3D,mBAAS,CAC3C4D,SAAU,KACVC,QAAS,KACTC,KAAM,KACNC,MAAO,OAJT,mBAAKC,EAAL,KAAkBC,EAAlB,KAMA,EAA0BjE,oBAAS,GAAnC,mBAAKkE,EAAL,KAAaC,EAAb,KAEA/D,qBAAU,WACRgE,UAAUC,YAAYC,oBAAmB,SAAAC,GACvC,MAA8BA,EAASC,OAAhCC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,UACjB,OAAMD,GAAcC,EACXC,EAA2BF,EAAUC,GAErCE,EAAqB/C,QAG/B,IAEHzB,qBAAU,WACR,OAAOwE,EAAqB/C,KAC3B,CAACA,IAEJ,IAAM+C,EAAuB,SAAC/C,GAC5B,OAAOF,EAAkBC,gCAAgCC,GACtDE,MAAK,SAAAE,GACJ4C,EAAmB5C,GACnBkC,GAAU,MACTW,OAAM,SAAAC,GACTC,MAAM,iCAIJL,EAA6B,SAACF,EAAUC,GAC5C,OAAO/C,EAAkBO,8BAA8BuC,EAAUC,GAC9D3C,MAAK,SAAAE,GACJ4C,EAAmB5C,GACnBkC,GAAU,MACTW,OAAM,SAAAC,GACTC,MAAM,iCAIJH,EAAqB,SAAC5C,GAC1B,IAAMgD,EFCe,SAACC,GACzB,IAAM1C,EAAU0C,EAAYC,SAAS,SAC/B1C,EAASyC,EAAYC,SAAS,QAE9BC,GADO,IAAIjC,MACCkC,WAGlB,OAAOhD,EAFY+C,EAAO,IAAMA,EAAO,EAAK,QAAU,OAEnBE,MAAK,SAAA/C,GAAG,OAAKA,EAAIC,UAAYA,GAAWD,EAAIE,SAAWA,KAASF,IERlFgD,CAAUtD,EAAK4B,QAAQ,GAAGqB,aAClCM,EAAqB,CACzB5B,SAAU3B,EAAKwD,IACf5B,QAAS,CACP6B,YAAazD,EAAK0D,KAClBC,WAAY3D,EAAK4B,QAAQ,GACzBgC,KAAM5D,EAAK4D,MAEb/B,KAAMb,IACNc,MAAOkB,GAKT,OAFAtB,EAAQ1B,EAAK6D,MACb7B,EAAeuB,IACR,GAOT,OACE,qBAAKhF,UAAWC,IAAMC,QAASD,MAAO,CAACsF,gBAAgB,OAAD,OAAS/B,EAAYD,MAArB,MAAtD,SAEIG,GACA,sBAAK1D,UAAWC,IAAMuF,UAAtB,UACE,sBAAKxF,UAAWC,IAAMwF,QAAtB,UACE,+BAAKpE,EAAL,eAAamC,EAAYJ,gBAAzB,aAAa,EAAsBsC,WACnC,6BAAKlC,EAAYF,OACjB,mBAAGtD,UAAS,+BAA0BwD,EAAYH,QAAQ+B,WAAWhF,GAAzD,YAA+DH,IAAM0F,OACjF,4BAAInC,EAAYH,QAAQ+B,WAAWV,cACnC,8BAAIkB,KAAKC,MAAMrC,EAAYH,QAAQ6B,YAAYY,MAA/C,YACA,2CAActC,EAAYH,QAAQ6B,YAAYa,SAA9C,QACA,uCAAUvC,EAAYH,QAAQgC,KAAKW,MAAnC,cAEF,cAAC,EAAD,CAAavG,WAAY4B,EAAMtB,QAlBlB,SAACkG,GACpB9C,EAAQ8C,YC7DGC,EANH,WACV,OACE,cAAC,EAAD,KCAJC,IAASC,OACH,cAAC,EAAD,IACJC,SAASC,eAAe,U,kBCP1BlH,EAAOC,QAAU,CAAC,QAAU,6BAA6B,MAAQ,2BAA2B,MAAQ,8B","file":"static/js/main.199b5c46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Weather_wrapper__1tWy-\",\"container\":\"Weather_container__3bEbM\",\"content\":\"Weather_content__1qI-P\",\"owf\":\"Weather_owf__1-Y4n\"};","import React, { useEffect, useState } from 'react';\r\nimport style from './SearchInput.module.scss'\r\n\r\nconst SearchInput = (props) => {\r\n  let [searchValue, setSearchValue] = useState(props.inputValue);\r\n\r\n  useEffect(() => {\r\n    setSearchValue(props.inputValue);\r\n  }, [props.inputValue])\r\n\r\n  const searchData = () => {\r\n    if (!searchValue.trim()) return;\r\n    props.getData(searchValue);\r\n  }\r\n\r\n  const changeSearchValue = (e) => setSearchValue(e.currentTarget.value);\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <input className={style.input} id=\"searchInput\" onChange={changeSearchValue} onBlur={searchData} value={searchValue} />\r\n      <label className={style.label} htmlFor=\"searchInput\" onClick={searchData}>\r\n        <svg viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path></svg>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchInput;\r\n","import * as axios from 'axios';\r\n\r\nlet instance = axios.create({\r\n  baseURL: 'https://api.openweathermap.org/data/2.5/',\r\n});\r\n\r\nconst openWeatherMapAPI = {\r\n  getSearchCityCurrentWeatherData(city) {\r\n    return instance.get(`weather?q=${city}&lang=en&appid=7855be89de72b6ea0540164aea4c0922&units=metric`).then(response => response.data);\r\n  },\r\n  getUserCityCurrentWeatherData(lat, lon) {\r\n    return instance.get(`weather?lat=${lat}&lon=${lon}&lang=en&appid=7855be89de72b6ea0540164aea4c0922&units=metric`).then(response => response.data);\r\n  }\r\n};\r\n\r\nexport default openWeatherMapAPI;\r\n","export default __webpack_public_path__ + \"static/media/yasnoe-nebo.9561ba09.jpg\";","export default __webpack_public_path__ + \"static/media/night.c3407709.jpg\";","export default __webpack_public_path__ + \"static/media/oblachnoe.5bf735ef.jpg\";","export default __webpack_public_path__ + \"static/media/moon-clouds.4903b037.jpg\";","export default __webpack_public_path__ + \"static/media/rain.66d4dcc7.jpg\";","export default __webpack_public_path__ + \"static/media/dozhd-noch.5e919563.jpg\";","import day from '../assets/img/yasnoe-nebo.jpg';\r\nimport night from '../assets/img/night.jpg';\r\nimport cloudDay from '../assets/img/oblachnoe.jpg';\r\nimport cloudNight from '../assets/img/moon-clouds.jpg';\r\nimport rainDay from '../assets/img/rain.jpg';\r\nimport rainNight from '../assets/img/dozhd-noch.jpg';\r\n\r\nconst backgroundImages = {\r\n  day: [\r\n    {\r\n      img: day,\r\n      isCloud: false,\r\n      isRain: false\r\n    },\r\n    {\r\n      img: rainDay,\r\n      isCloud: false,\r\n      isRain: true\r\n    },\r\n    {\r\n      img: rainDay,\r\n      isCloud: true,\r\n      isRain: true\r\n    },\r\n    {\r\n      img: cloudDay,\r\n      isCloud: true,\r\n      isRain: false\r\n    }\r\n  ],\r\n  night: [\r\n    {\r\n      img: night,\r\n      isCloud: false,\r\n      isRain: false\r\n    },\r\n    {\r\n      img: rainNight,\r\n      isCloud: false,\r\n      isRain: true\r\n    },\r\n    {\r\n      img: rainNight,\r\n      isCloud: true,\r\n      isRain: true\r\n    },\r\n    {\r\n      img: cloudNight,\r\n      isCloud: true,\r\n      isRain: false\r\n    }\r\n  ]\r\n};\r\n\r\nexport const selectImg = (description) => {\r\n const isCloud = description.includes('cloud');\r\n const isRain = description.includes('rain');\r\n const time = new Date();\r\n const hour = time.getHours();\r\n const partOfDay = (hour > 18 || hour < 6) ? 'night' : 'day';\r\n\r\n return backgroundImages[partOfDay].find(img => (img.isCloud === isCloud && img.isRain === isRain)).img;\r\n}\r\n\r\nexport default backgroundImages;\r\n","const WEEK_DAIS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\nconst MONTHS = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\r\n\r\nconst getDate = () => {\r\n  const today = new Date();\r\n  const year = today.getFullYear();\r\n  const month = today.getMonth();\r\n  const day = today.getDate();\r\n  const dayOfTheWeek = today.getDay();\r\n\r\n  return `${WEEK_DAIS[dayOfTheWeek]}, ${day} ${MONTHS[month]} ${year}`;\r\n}\r\n\r\nexport default getDate;\r\n","import React, {useEffect, useState} from 'react';\r\nimport SearchInput from '../common/SearchInput/SearchInput';\r\nimport style from './Weather.module.scss';\r\nimport openWeatherMapAPI from \"../../api/openWeatherMapAPI\";\r\nimport {selectImg} from \"../../utils/background\";\r\nimport getDate from \"../../utils/date\";\r\n\r\nconst Weather = (props) => {\r\n  let [city, setCity] = useState('Minsk');\r\n  let [weatherInfo, setWeatherInfo] = useState({\r\n    cityInfo: null,\r\n    weather: null,\r\n    date: null,\r\n    bgImg: null,\r\n  });\r\n  let [isInit, setIsInit] = useState(false)\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      const {latitude, longitude} = position.coords;\r\n      if (!!latitude && !!longitude) {\r\n        return getWeatherDataByCoordinate(latitude, longitude);\r\n      } else {\r\n        return getWeatherDataByCity(city);\r\n      }\r\n    });\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    return getWeatherDataByCity(city);\r\n  }, [city])\r\n\r\n  const getWeatherDataByCity = (city) => {\r\n    return openWeatherMapAPI.getSearchCityCurrentWeatherData(city)\r\n      .then(data => {\r\n        processWeatherData(data);\r\n        setIsInit(true);\r\n      }).catch(error => {\r\n      alert('This city wasn\\'t be found');\r\n    });\r\n  }\r\n\r\n  const getWeatherDataByCoordinate = (latitude, longitude) => {\r\n    return openWeatherMapAPI.getUserCityCurrentWeatherData(latitude, longitude)\r\n      .then(data => {\r\n        processWeatherData(data);\r\n        setIsInit(true);\r\n      }).catch(error => {\r\n      alert('This city wasn\\'t be found');\r\n    });\r\n  }\r\n\r\n  const processWeatherData = (data) => {\r\n    const image = selectImg(data.weather[0].description);\r\n    const updatedWeatherInfo = {\r\n      cityInfo: data.sys,\r\n      weather: {\r\n        temperature: data.main,\r\n        additional: data.weather[0],\r\n        wind: data.wind\r\n      },\r\n      date: getDate(),\r\n      bgImg: image,\r\n    };\r\n\r\n    setCity(data.name);\r\n    setWeatherInfo(updatedWeatherInfo);\r\n    return true;\r\n  }\r\n\r\n  const setCityValue = (cityValue) => {\r\n    setCity(cityValue);\r\n  }\r\n\r\n  return (\r\n    <div className={style.wrapper} style={{backgroundImage: `url(${weatherInfo.bgImg})`}}>\r\n      {\r\n        isInit &&\r\n        <div className={style.container}>\r\n          <div className={style.content}>\r\n            <h1>{city}, {weatherInfo.cityInfo?.country}</h1>\r\n            <h2>{weatherInfo.date}</h2>\r\n            <i className={`weather-icon owf owf-${weatherInfo.weather.additional.id} ${style.owf}`}></i>\r\n            <p>{weatherInfo.weather.additional.description}</p>\r\n            <p>{Math.round(weatherInfo.weather.temperature.temp)} °C</p>\r\n            <p>Humidity: {weatherInfo.weather.temperature.humidity} %</p>\r\n            <p>Wind: {weatherInfo.weather.wind.speed} km/h</p>\r\n          </div>\r\n          <SearchInput inputValue={city} getData={setCityValue}/>\r\n        </div>\r\n      }\r\n    </div>);\r\n}\r\n\r\nexport default Weather;\r\n","import React from 'react';\nimport './App.css';\nimport Weather from './components/Weather/Weather';\n\nconst App = () => {\n  return (\n    <Weather/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/owfont/owfont-regular.css';\nimport App from './App';\n\nReactDOM.render(\n      <App/>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SearchInput_wrapper__2T2Vs\",\"input\":\"SearchInput_input__1MnhW\",\"label\":\"SearchInput_label__1YCt9\"};"],"sourceRoot":""}